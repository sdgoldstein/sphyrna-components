var F=Object.getPrototypeOf;var G=Reflect.get;var b=i=>{throw TypeError(i)};var D=(i,u,e)=>u.has(i)||b("Cannot "+e);var s=(i,u,e)=>(D(i,u,"read from private field"),e?e.call(i):u.get(i)),c=(i,u,e)=>u.has(i)?b("Cannot add the same private member more than once"):u instanceof WeakSet?u.add(i):u.set(i,e);var z=(i,u,e)=>(D(i,u,"access private method"),e);var S=(i,u,e)=>G(F(i),e,u);import{D as v,g as h,i as d}from"./context-ClX-pJyV.js";import{i as l}from"./use-id-45WlqWe6.js";var a,n,o,p,m;const w=class w extends Map{constructor(e){super();c(this,p);c(this,a,new Map);c(this,n,v(0));c(this,o,v(0));if(e){for(var[r,t]of e)super.set(r,t);s(this,o).v=super.size}}has(e){var r=s(this,a),t=r.get(e);if(t===void 0){var f=super.get(e);if(f!==void 0)t=v(0),r.set(e,t);else return h(s(this,n)),!1}return h(t),!0}forEach(e,r){z(this,p,m).call(this),super.forEach(e,r)}get(e){var r=s(this,a),t=r.get(e);if(t===void 0){var f=super.get(e);if(f!==void 0)t=v(0),r.set(e,t);else{h(s(this,n));return}}return h(t),super.get(e)}set(e,r){var E;var t=s(this,a),f=t.get(e),q=super.get(e),A=super.set(e,r),g=s(this,n);if(f===void 0)t.set(e,v(0)),d(s(this,o),super.size),l(g);else if(q!==r){l(f);var x=g.reactions===null?null:new Set(g.reactions),B=x===null||!((E=f.reactions)!=null&&E.every(C=>x.has(C)));B&&l(g)}return A}delete(e){var r=s(this,a),t=r.get(e),f=super.delete(e);return t!==void 0&&(r.delete(e),d(s(this,o),super.size),d(t,-1),l(s(this,n))),f}clear(){if(super.size!==0){super.clear();var e=s(this,a);d(s(this,o),0);for(var r of e.values())d(r,-1);l(s(this,n)),e.clear()}}keys(){return h(s(this,n)),super.keys()}values(){return z(this,p,m).call(this),super.values()}entries(){return z(this,p,m).call(this),super.entries()}[Symbol.iterator](){return this.entries()}get size(){return h(s(this,o)),super.size}};a=new WeakMap,n=new WeakMap,o=new WeakMap,p=new WeakSet,m=function(){h(s(this,n));var e=s(this,a);if(s(this,o).v!==e.size)for(var r of S(w.prototype,this,"keys").call(this))e.has(r)||e.set(r,v(0));for(var[,t]of s(this,a))h(t)};let j=w;export{j as S};
